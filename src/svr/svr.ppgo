import (
    "fiber";

    "../conf";
    "../proto";
    "../cmd_proc";
)

class ClientWorker
{
    public func run(conn fiber.Conn)
    {
        var client = proto.Client(conn);
        while (true)
        {
            var req, exc, tb = client.recv_req();
            if (exc != nil)
            {
                if (exc == fiber.kExcConnReset || exc == fiber.kExcClosed)
                {
                    return;
                }
                rethrow(exc, tb);
            }
            if (req.len() == 0)
            {
                return;
            }

            cmd_proc.proc_cmd(client, req[0], req[1 :]);

            client.flush();
        }
    }
}

class SvrMain
{
    public func run()
    {
        var listener = fiber.listen_tcp(conf.kPort);
        println("server start");
        listener.serve(ClientWorker(), worker_count = conf.kWorkerCount);
    }
}

public func start()
{
    fiber.run(SvrMain());
}
